
package emotki;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Emotki", targetNamespace = "http://emotki/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Emotki {


    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFiles", targetNamespace = "http://emotki/", className = "emotki.GetFiles")
    @ResponseWrapper(localName = "getFilesResponse", targetNamespace = "http://emotki/", className = "emotki.GetFilesResponse")
    @Action(input = "http://emotki/Emotki/getFilesRequest", output = "http://emotki/Emotki/getFilesResponse")
    public List<String> getFiles();

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileContent", targetNamespace = "http://emotki/", className = "emotki.GetFileContent")
    @ResponseWrapper(localName = "getFileContentResponse", targetNamespace = "http://emotki/", className = "emotki.GetFileContentResponse")
    @Action(input = "http://emotki/Emotki/getFileContentRequest", output = "http://emotki/Emotki/getFileContentResponse")
    public String getFileContent(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param filename
     * @param content
     * @param desc
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "postFile", targetNamespace = "http://emotki/", className = "emotki.PostFile")
    @ResponseWrapper(localName = "postFileResponse", targetNamespace = "http://emotki/", className = "emotki.PostFileResponse")
    @Action(input = "http://emotki/Emotki/postFileRequest", output = "http://emotki/Emotki/postFileResponse")
    public int postFile(
        @WebParam(name = "filename", targetNamespace = "")
        String filename,
        @WebParam(name = "content", targetNamespace = "")
        byte[] content,
        @WebParam(name = "desc", targetNamespace = "")
        String desc);

    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileInfo", targetNamespace = "http://emotki/", className = "emotki.GetFileInfo")
    @ResponseWrapper(localName = "getFileInfoResponse", targetNamespace = "http://emotki/", className = "emotki.GetFileInfoResponse")
    @Action(input = "http://emotki/Emotki/getFileInfoRequest", output = "http://emotki/Emotki/getFileInfoResponse")
    public List<String> getFileInfo(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getIDs", targetNamespace = "http://emotki/", className = "emotki.GetIDs")
    @ResponseWrapper(localName = "getIDsResponse", targetNamespace = "http://emotki/", className = "emotki.GetIDsResponse")
    @Action(input = "http://emotki/Emotki/getIDsRequest", output = "http://emotki/Emotki/getIDsResponse")
    public List<String> getIDs();

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBigImage", targetNamespace = "http://emotki/", className = "emotki.GetBigImage")
    @ResponseWrapper(localName = "getBigImageResponse", targetNamespace = "http://emotki/", className = "emotki.GetBigImageResponse")
    @Action(input = "http://emotki/Emotki/getBigImageRequest", output = "http://emotki/Emotki/getBigImageResponse")
    public String getBigImage(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteFile", targetNamespace = "http://emotki/", className = "emotki.DeleteFile")
    @ResponseWrapper(localName = "deleteFileResponse", targetNamespace = "http://emotki/", className = "emotki.DeleteFileResponse")
    @Action(input = "http://emotki/Emotki/deleteFileRequest", output = "http://emotki/Emotki/deleteFileResponse")
    public boolean deleteFile(
        @WebParam(name = "id", targetNamespace = "")
        String id);

}
